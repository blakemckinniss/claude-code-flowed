"""Testing patterns analyzer."""

from ..core import Analyzer


class TestingAnalyzer(Analyzer):
    """Analyzes testing-related patterns."""
    
    def get_name(self) -> str:
        return "testing"
    
    def _initialize_patterns(self) -> None:
        """Initialize testing patterns."""
        self.add_pattern(
            r"(test|tdd|testing|quality|validation|qa)",
            """
ðŸ§ª TESTING FOCUS DETECTED
â€¢ Deploy TDD swarm: tdd-london-swarm, tester, production-validator
â€¢ Use SPARC TDD workflow for systematic testing
â€¢ Generate tests in parallel for efficiency
â€¢ Consider code-analyzer for coverage analysis""",
            {
                "category": "testing",
                "suggested_agents": ["tdd-london-swarm", "tester", "production-validator", "code-analyzer"],
                "methodology": "TDD"
            }
        )
        
        self.add_pattern(
            r"(unit test|mock|stub|spy|fixture)",
            """
ðŸŽ¯ UNIT TESTING DETECTED
â€¢ Use tdd-london-swarm for mock-driven development
â€¢ Deploy tester for comprehensive test generation
â€¢ Consider sparc-coder for TDD implementation
â€¢ Enable parallel test generation for speed""",
            {
                "category": "unit-testing",
                "suggested_agents": ["tdd-london-swarm", "tester", "sparc-coder"],
                "focus": "unit-tests"
            }
        )
        
        self.add_pattern(
            r"(integration|e2e|end.to.end|acceptance)",
            """
ðŸ”— INTEGRATION TESTING DETECTED
â€¢ Deploy production-validator for real scenarios
â€¢ Use tester for comprehensive coverage
â€¢ Consider performance-benchmarker for load tests
â€¢ Enable swarm coordination for complex flows""",
            {
                "category": "integration-testing",
                "suggested_agents": ["production-validator", "tester", "performance-benchmarker"],
                "focus": "integration"
            }
        )
        
        self.add_pattern(
            r"(coverage|quality|lint|format|static analysis)",
            """
ðŸ“Š CODE QUALITY DETECTED
â€¢ Use code-analyzer for deep analysis
â€¢ Deploy reviewer for quality assurance
â€¢ Consider code-review-swarm for automation
â€¢ Enable metrics tracking for improvement""",
            {
                "category": "code-quality",
                "suggested_agents": ["code-analyzer", "reviewer", "code-review-swarm"],
                "focus": "quality"
            }
        )