[tool.ruff]
target-version = "py38"
fix            = true

# Core discovery
exclude        = [
  ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".mypy_cache",
  ".nox", ".pants.d", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv",
  "__pypackages__", "_build", "buck-out", "build", "dist", "node_modules",
  "venv",
  # Project-specific excludes
  ".claude-flow/cache/*", ".claude/hooks/cache/*", ".claude/hooks/db/*",
  "**/.session/*",
]
extend-include = ["*.pyi", "**/pyproject.toml"]  # replaces the old `include`

[tool.ruff.lint]
select = [
  # Core
  "F", "E", "UP",
  # High-impact bug detection
  "B", "BLE", "A", "TCH", "TRY",
  # Left-over debug code
  "T10", "T20",
  # Security
  "S",
  # Pylint
  "PLE", "PLW",
  # Ruff-specific
  "RUF",
]

# *Single* consolidated ignore list (E501 was moved here)
ignore = [
  "E501",          # long lines handled by formatter
  "FIX002", "TD002", "TD003",  # allow TODOs
  "T201",          # allow print() (hook comms)
  "S101",          # allow assert
  "S603", "S607",  # allow subprocess, manual review
  "BLE001",        # broad except in specific fallbacks
  "F401",          # unused imports (allowed in __init__.py below)
  
  # Stylistic and non-functional suggestions to ignore
  "TRY300",        # try-consider-else - stylistic preference
  "PLW0603",       # global-statement - sometimes needed for hooks
  "TRY401",        # verbose-log-message - stylistic
  "RUF012",        # mutable-class-default - not always an issue
  "S110",          # try-except-pass - sometimes valid
  "TRY003",        # raise-vanilla-args - stylistic
  "E402",          # module-import-not-at-top - hooks need dynamic imports
  "PLW0602",       # global-variable-not-assigned - false positives
  "S112",          # try-except-continue - sometimes valid
  "TRY301",        # raise-within-try - stylistic
  "TRY002",        # raise-vanilla-class - stylistic
  "RUF006",        # asyncio-dangling-task - false positives
  "S301",          # pickle usage - needed for ML models
  "A002",          # builtin-argument-shadowing - minor
  "B904",          # raise-without-from - stylistic
  "E741",          # ambiguous-variable-name - minor
  "RUF001",        # ambiguous-unicode-character - minor
  "S108",          # hardcoded-temp-file - sometimes needed
  "S311",          # random usage - not always cryptographic
  "S324",          # hashlib usage - not always security critical
  "B007",          # unused-loop-control-variable - stylistic
  "B023",          # function-uses-loop-variable - sometimes intended
  "PLW1509",       # subprocess-popen-preexec-fn - legacy code
  "PLW2101",       # useless-with-lock - false positives
  "RUF005",        # collection-literal-concatenation - stylistic
  "RUF022",        # unsorted-dunder-all - stylistic
  "RUF046",        # unnecessary-cast-to-int - minor
  "PLW1510",       # subprocess-run-without-check - sometimes intended
  "B006",          # mutable-argument-default - false positives
  "E712",          # true-false-comparison - sometimes clearer
  "RUF013",        # implicit-optional - Python 3.8 compatibility
  "B015",          # flake8-bugbear - stylistic
]

[tool.ruff.lint.per-file-ignores]
"**/test_*.py"     = ["S101"]
"**/*hook*.py"     = ["T201"]
"**/__init__.py"   = ["F401"]

[tool.ruff.lint.mccabe]
max-complexity = 15
